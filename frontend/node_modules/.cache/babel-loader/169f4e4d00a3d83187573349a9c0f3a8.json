{"ast":null,"code":"export default {\n  name: 'PostAComment',\n\n  data() {\n    return {\n      success: \"\",\n      message: \"\",\n      //message d'erreur\n      CommentText: String,\n      ShareFormHidden: {\n        type: Boolean,\n        default: true\n      }\n    };\n  },\n\n  methods: {\n    displayForm() {\n      this.ShareFormHidden = false;\n    },\n\n    displayGoTo() {\n      this.ShareFormHidden = true;\n    },\n\n    checkForm() {\n      if (document.getElementById(\"CommentText\").textContent != null) {\n        document.getElementById(\"CommentBtn\").disabled = false;\n      } else {\n        document.getElementById(\"CommentBtn\").disabled = true;\n      }\n    },\n\n    Comment() {\n      const Token = JSON.parse(sessionStorage.getItem(\"Token\"));\n      const CommentText = document.getElementById(\"CommentText\").value;\n      const shareShareId = new URL(window.location.href).hash.split(\"=\")[1]; // const commentCommentId = \"\" ? document.getElementById(\"CommentId\") : document.getElementById(\"CommentId\").value\n\n      const Comment = {\n        \"CommentText\": CommentText,\n        \"shareShareId\": shareShareId // \"commentCommentId\": commentCommentId,\n\n      };\n      fetch(\"http://localhost:3000/api/comments\", {\n        method: 'POST',\n        body: JSON.stringify(Comment),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"*/*\",\n          \"Authorization\": \"Bearer \" + Token\n        },\n        mode: \"cors\"\n      }).then(response => {\n        if (response.status == 201) {\n          this.success = true;\n          this.message = \"Commentaire en ligne.\";\n          this.ShareFormHidden = true;\n          this.$router.push({\n            name: 'wall'\n          });\n          this.$router.go(0);\n        } else {\n          response.json().then(json => {\n            this.success = false;\n            console.log(json);\n            this.message = json.error || json.message;\n            return this.message;\n          });\n        }\n      }).catch(() => {\n        this.success = false;\n        this.message = `Le serveur ne répond pas ! Veuillez réessayer ultérieurement`;\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA+CA,eAAe;AACbA,MAAI,EAAE,cADO;;AAEbC,MAAI,GAAG;AACL,WAAO;AACDC,aAAO,EAAE,EADR;AAEDC,aAAM,EAAG,EAFR;AAEY;AACbC,iBAAW,EAAEC,MAHZ;AAIDC,qBAAc,EAAG;AACfC,YAAI,EAAEC,OADS;AAEfC,eAAO,EAAE;AAFM;AAJhB,KAAP;AAQC,GAXU;;AAabC,SAAO,EAAE;AACDC,eAAW,GAAE;AACX,WAAKL,eAAL,GAAuB,KAAvB;AACD,KAHA;;AAIDM,eAAW,GAAE;AACX,WAAKN,eAAL,GAAuB,IAAvB;AACD,KANA;;AAODO,aAAS,GAAG;AACF,UAAIC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,WAAvC,IAAsD,IAA1D,EAAgE;AAC9DF,gBAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCE,QAAtC,GAAiD,KAAjD;AACF,OAFA,MAEO;AAAEH,gBAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCE,QAAtC,GAAiD,IAAjD;AAAsD;AACxE,KAXA;;AAYDC,WAAO,GAAG;AAIA,YAAMC,KAAI,GAAIC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAX,CAAd;AACA,YAAMnB,WAAU,GAAIU,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCS,KAA3D;AACA,YAAMC,YAAW,GAAI,IAAIC,GAAJ,CAAQC,MAAM,CAACC,QAAP,CAAgBC,IAAxB,EAA8BC,IAA9B,CAAmCC,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C,CAArB,CANA,CAQA;;AAEA,YAAMb,OAAM,GAAI;AAAE,uBAAed,WAAjB;AACE,wBAAgBqB,YADlB,CAEE;;AAFF,OAAhB;AAKAO,WAAK,CAAC,oCAAD,EAAuC;AAClCC,cAAM,EAAE,MAD0B;AAElCC,YAAI,EAAEd,IAAI,CAACe,SAAL,CAAejB,OAAf,CAF4B;AAGlCkB,eAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,oBAAS,KAFJ;AAGL,2BAAiB,YAAYjB;AAHxB,SAHyB;AAQlCkB,YAAG,EAAI;AAR2B,OAAvC,CAAL,CAUCC,IAVD,CAUOC,QAAD,IAAc;AACV,YAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AAClB,eAAKtC,OAAL,GAAc,IAAd;AACA,eAAKC,OAAL,GAAe,uBAAf;AACA,eAAKG,eAAL,GAAuB,IAAvB;AACA,eAAKmC,OAAL,CAAaC,IAAb,CAAkB;AAAE1C,gBAAI,EAAE;AAAR,WAAlB;AACA,eAAKyC,OAAL,CAAaE,EAAb,CAAgB,CAAhB;AAEV,SAPA,MAOO;AACGJ,kBAAQ,CAACK,IAAT,GACCN,IADD,CACQM,IAAD,IAAU;AACjB,iBAAK1C,OAAL,GAAc,KAAd;AACA2C,mBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,iBAAKzC,OAAL,GAAeyC,IAAI,CAACG,KAAL,IAAeH,IAAI,CAACzC,OAAnC;AACA,mBAAO,KAAKA,OAAZ;AACC,WAND;AAOV;AACT,OA3BD,EA4BC6C,KA5BD,CA4BQ,MAAM;AACJ,aAAK9C,OAAL,GAAc,KAAd;AACA,aAAKC,OAAL,GAAgB,8DAAhB;AACT,OA/BD;AAgCV;;AA3DC;AAbI,CAAf","names":["name","data","success","message","CommentText","String","ShareFormHidden","type","Boolean","default","methods","displayForm","displayGoTo","checkForm","document","getElementById","textContent","disabled","Comment","Token","JSON","parse","sessionStorage","getItem","value","shareShareId","URL","window","location","href","hash","split","fetch","method","body","stringify","headers","mode","then","response","status","$router","push","go","json","console","log","error","catch"],"sourceRoot":"","sources":["/Users/stefan/Library/Mobile Documents/com~apple~CloudDocs/08 WEB ET SITES/P7/frontend/src/components/PostAComment.vue"],"sourcesContent":["<template>\n    <section class = \"container\">\n      <div class=\"btn-div\" id=\"ShareAccess\" v-show=\"ShareFormHidden\">\n        <button type=\"button\" \n                class=\"btn\" \n                @click=\"displayForm()\" \n                id=\"GoToShare\" \n                value=\"Partager\">\n                Un commentaire ?\n        </button>\n      </div>\n      <div class = \"formSection\" id=\"ShareForm\" v-show=\"!ShareFormHidden\" >\n          <div class = \"formDiv\">\n                    <form     \n                              type=\"multipart/form-data\"\n                              method=\"POST\" \n                              name=\"form\" \n                              id=\"CommentToBePosted\"\n                              class=\"formulaire\">\n                              \n                              <!--Le Comment-->\n                               <div class=\"formLine\">\n                                        <label    \n                                                  for=\"CommentText\" \n                                                  class=\"label\">Votre commentaire</label>\n                                        <textarea class=\"bigtextarea textarea input\"\n                                                  form=\"CommentToBePosted\" \n                                                  type=\"textarea\"\n                                                  @input=\"checkForm\"\n                                                 \n                                                  placeholder= \"...\"\n                                                  autofocus\n                                                  id=\"CommentText\"\n                                                  name=\"CommentText\"></textarea>\n                              </div>\n                              \n                              <div class=\"btn-div\">\n                                        <button type=\"button\" class=\"btn\" @click=\"displayGoTo()\" id=\"CancelBtn\">Annuler</button>\n                                        <button type=\"button\" class=\"btn\" @click=\"Comment()\" id=\"CommentBtn\" disabled>Commenter</button>\n                              </div>\n                    </form>\n          </div>\n      </div>\n    </section>\n</template>\n\n<script>\nexport default {\n  name: 'PostAComment',\n  data() {\n    return {\n          success: \"\",\n          message :\"\", //message d'erreur\n          CommentText: String,\n          ShareFormHidden :{\n            type: Boolean,\n            default: true }\n            }\n    },\n  \n  methods: {\n          displayForm(){\n            this.ShareFormHidden = false\n          },\n          displayGoTo(){\n            this.ShareFormHidden = true\n          },\n          checkForm() {\n                    if (document.getElementById(\"CommentText\").textContent != null) {\n                      document.getElementById(\"CommentBtn\").disabled = false;\n                    } else { document.getElementById(\"CommentBtn\").disabled = true }\n          },\n          Comment() {\n\n                    \n\n                    const Token = JSON.parse(sessionStorage.getItem(\"Token\"));\n                    const CommentText = document.getElementById(\"CommentText\").value\n                    const shareShareId = new URL(window.location.href).hash.split(\"=\")[1]\n\n                    // const commentCommentId = \"\" ? document.getElementById(\"CommentId\") : document.getElementById(\"CommentId\").value\n\n                    const Comment = { \"CommentText\": CommentText,\n                                      \"shareShareId\": shareShareId,\n                                      // \"commentCommentId\": commentCommentId,\n                    }\n\n                    fetch(\"http://localhost:3000/api/comments\", {\n                              method: 'POST',\n                              body: JSON.stringify(Comment),\n                              headers: {\n                                  \"Content-Type\": \"application/json\",\n                                  \"Accept\":\"*/*\",\n                                  \"Authorization\": \"Bearer \" + Token,\n                              },\n                              mode : \"cors\"})\n\n                    .then((response) => {\n                              if (response.status == 201) { \n                                        this.success= true;\n                                        this.message = \"Commentaire en ligne.\";\n                                        this.ShareFormHidden = true;\n                                        this.$router.push({ name: 'wall' });\n                                        this.$router.go(0);\n\n                              } else {\n                                        response.json ()\n                                        .then ((json) => {\n                                        this.success= false;\n                                        console.log(json);\n                                        this.message = json.error ||  json.message ;\n                                        return this.message\n                                        })\n                              }\n                    })\n                    .catch (() => {\n                              this.success= false;\n                              this.message = `Le serveur ne répond pas ! Veuillez réessayer ultérieurement`;\n                    })         \n          }               \n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n#formImagePreview {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n#formImagePreview img {\n  max-width: 100%;\n  max-height: 500px;\n}\n\n</style>"]},"metadata":{},"sourceType":"module"}