{"ast":null,"code":"export default {\n  name: 'UserLogin',\n\n  data() {\n    return {\n      success: \"\",\n      message: \"\" //message d'erreur ou pas\n\n    };\n  },\n\n  methods: {\n    checkForm() {\n      if (document.getElementById(\"UserEmail\").checkValidity() && document.getElementById(\"UserPassword\").checkValidity()) {\n        document.getElementById(\"UserSignupBtn\").disabled = false;\n      } else document.getElementById(\"UserSignupBtn\").disabled = true;\n    },\n\n    LogIn(e) {\n      e.preventDefault();\n      const UserEmail = document.getElementById(\"UserEmail\").value;\n      const UserPassword = document.getElementById(\"UserPassword\").value;\n      const User = {\n        \"UserEmail\": UserEmail,\n        \"UserPassword\": UserPassword\n      };\n      fetch(\"http://localhost:3000/api/auth/login\", {\n        method: 'POST',\n        body: JSON.stringify(User),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        mode: \"cors\"\n      }).then(response => {\n        if (response.status == 200) {\n          return response.json();\n        } else {\n          response.json().then(json => {\n            this.success = false;\n            this.message = json.error || json.message;\n          });\n        }\n      }).then(response => {\n        this.success = true;\n        this.message = response.message;\n        sessionStorage.setItem(\"UserId\", JSON.stringify(response.UserId));\n        sessionStorage.setItem(\"Token\", JSON.stringify(response.token));\n        sessionStorage.setItem(\"UserHabilitation\", JSON.stringify(response.UserHabilitation));\n        this.$router.push({\n          name: 'wall'\n        });\n      }).catch(() => {\n        this.success = false;\n        this.message = `Le serveur ne répond pas ! Veuillez réessayer ultérieurement`;\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAgEA,eAAe;AACbA,MAAI,EAAE,WADO;;AAEbC,MAAI,GAAG;AACL,WAAO;AACDC,aAAO,EAAE,EADR;AAEDC,aAAM,EAAG,EAFR,CAEY;;AAFZ,KAAP;AAID,GAPY;;AAQbC,SAAO,EAAE;AAEPC,aAAS,GAAG;AACV,UAAIC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,aAArC,MACDF,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,aAAxC,EADH,EAC4D;AAC1DF,gBAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCE,QAAzC,GAAoD,KAApD;AACF,OAHA,MAIKH,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCE,QAAzC,GAAoD,IAApD;AACN,KARM;;AAUPC,SAAK,CAACC,CAAD,EAAI;AAEPA,OAAC,CAACC,cAAF;AAEI,YAAMC,SAAQ,GAAIP,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCO,KAAvD;AACA,YAAMC,YAAW,GAAIT,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCO,KAA7D;AAEA,YAAME,IAAG,GAAI;AAAE,qBAAaH,SAAf;AACE,wBAAgBE;AADlB,OAAb;AAIAE,WAAK,CAAC,sCAAD,EAAyC;AACpCC,cAAM,EAAE,MAD4B;AAEpCC,YAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAF8B;AAGpCM,eAAO,EAAE;AAAC,0BAAgB;AAAjB,SAH2B;AAIpCC,YAAG,EAAG;AAJ8B,OAAzC,CAAL,CAMCC,IAND,CAMOC,QAAD,IAAc;AACV,YAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AAClB,iBAAOD,QAAQ,CAACE,IAAT,EAAP;AACV,SAFA,MAEO;AACGF,kBAAQ,CAACE,IAAT,GACCH,IADD,CACQG,IAAD,IAAU;AACjB,iBAAKzB,OAAL,GAAc,KAAd;AACA,iBAAKC,OAAL,GAAewB,IAAI,CAACC,KAAL,IAAeD,IAAI,CAACxB,OAAnC;AACC,WAJD;AAKV;AACT,OAhBD,EAiBCqB,IAjBD,CAiBOC,QAAD,IAAc;AACV,aAAKvB,OAAL,GAAc,IAAd;AACA,aAAKC,OAAL,GAAesB,QAAQ,CAACtB,OAAxB;AACA0B,sBAAc,CAACC,OAAf,CAAuB,QAAvB,EAAiCV,IAAI,CAACC,SAAL,CAAeI,QAAQ,CAACM,MAAxB,CAAjC;AACAF,sBAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCV,IAAI,CAACC,SAAL,CAAeI,QAAQ,CAACO,KAAxB,CAAhC;AACAH,sBAAc,CAACC,OAAf,CAAuB,kBAAvB,EAA2CV,IAAI,CAACC,SAAL,CAAeI,QAAQ,CAACQ,gBAAxB,CAA3C;AACA,aAAKC,OAAL,CAAaC,IAAb,CAAkB;AAAEnC,cAAI,EAAE;AAAR,SAAlB;AACT,OAxBD,EA0BCoC,KA1BD,CA0BQ,MAAM;AACJ,aAAKlC,OAAL,GAAc,KAAd;AACA,aAAKC,OAAL,GAAgB,8DAAhB;AACT,OA7BD;AA8BN;;AAnDO;AARI,CAAf","names":["name","data","success","message","methods","checkForm","document","getElementById","checkValidity","disabled","LogIn","e","preventDefault","UserEmail","value","UserPassword","User","fetch","method","body","JSON","stringify","headers","mode","then","response","status","json","error","sessionStorage","setItem","UserId","token","UserHabilitation","$router","push","catch"],"sourceRoot":"","sources":["/Users/stefan/Library/Mobile Documents/com~apple~CloudDocs/08 WEB ET SITES/P7/frontend/src/components/UserLoginComp.vue"],"sourcesContent":["<template>\n    <section class = \"container\">\n      <div class = \"formSection\">\n\n          <div class=\"please\">\n            <h2 > Ravis de vous revoir ! </h2>\n          </div>\n\n          <div class = \"formDiv\">\n                    <form     class=\"formulaire\"\n                              method=\"POST\" \n                              name=\"form\" \n                              id=\"form\" \n                              @submit = \"LogIn\"> \n                              \n                              <!--L'Email'-->\n                               <div class=\"formLine\">\n                                        <label    \n                                                  for=\"UserEmail\" \n                                                  class=\"label\">Email</label>\n                                        <input    class=\"input\"\n                                                  @input = \"checkForm\"    \n                                                  type=\"email\" \n                                                  \n                                                  id=\"UserEmail\"\n                                                  name=\"UserEmail\" \n                                                  required=\"\">\n                              </div>\n\n                              <!--Le Mot de passe -->\n                              <div class=\"formLine\">\n                                        <label    \n                                                  for=\"UserPassword\" \n                                                  class=\"label\">Mot de passe</label>\n                                        <input    class=\"input\"\n                                                  @input = \"checkForm\"    \n                                                  type=\"text\" \n                                                  \n                                                  id=\"UserPassword\" \n                                                  name=\"UserPassword\" \n                                                  required=\"required\" \n                                                  maxlength=\"30\">\n                              </div>\n                              \n                              <div class=\"btn-div\">\n                                        <input type=\"submit\"  class=\"btn\" id=\"UserSignupBtn\" value=\"S'authentifier\" disabled>\n                                        // ra\n                              </div>\n                    </form>\n\n                    <div class=\"add-div\" v-show=\"success===false\">\n                      <p id=\"erreur\"> Echec de l'authentification : {{message}} </p>\n                    </div>\n\n                    <div class=\"add-div\" v-show=\"success===true\">\n                      <p id=\"erreur\"> Succès de l'authentification : {{message}} </p>\n                    </div>\n\n          </div>\n       </div>\n    </section>\n</template>\n\n<script>\nexport default {\n  name: 'UserLogin',\n  data() {\n    return {\n          success: \"\",\n          message :\"\", //message d'erreur ou pas\n    }\n  },\n  methods: {\n\n    checkForm() {\n      if (document.getElementById(\"UserEmail\").checkValidity()\n      && document.getElementById(\"UserPassword\").checkValidity()) {\n        document.getElementById(\"UserSignupBtn\").disabled = false;\n      }\n      else document.getElementById(\"UserSignupBtn\").disabled = true;\n    },\n\n    LogIn(e) {\n\n      e.preventDefault()\n\n          const UserEmail = document.getElementById(\"UserEmail\").value\n          const UserPassword = document.getElementById(\"UserPassword\").value\n          \n          const User = { \"UserEmail\": UserEmail,\n                         \"UserPassword\": UserPassword\n          }\n\n          fetch(\"http://localhost:3000/api/auth/login\", {\n                    method: 'POST',\n                    body: JSON.stringify(User),\n                    headers: {\"Content-Type\": \"application/json\" },\n                    mode :\"cors\"\n          })\n          .then((response) => {\n                    if (response.status == 200) { \n                              return response.json();\n                    } else {\n                              response.json ()\n                              .then ((json) => {\n                              this.success= false;\n                              this.message = json.error ||  json.message ;\n                              })\n                    }\n          })\n          .then((response) => {\n                    this.success= true;\n                    this.message = response.message;\n                    sessionStorage.setItem(\"UserId\", JSON.stringify(response.UserId));\n                    sessionStorage.setItem(\"Token\", JSON.stringify(response.token));\n                    sessionStorage.setItem(\"UserHabilitation\", JSON.stringify(response.UserHabilitation));\n                    this.$router.push({ name: 'wall' });\n          })\n\n          .catch (() => {\n                    this.success= false;\n                    this.message = `Le serveur ne répond pas ! Veuillez réessayer ultérieurement`;\n          })         \n    }               \n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}