{"ast":null,"code":"import PostAComment from \"@/components/PostAComment.vue\";\nimport ShareAloneComments from \"@/components/ShareAloneComments.vue\";\nimport dayjs from 'dayjs';\n\nrequire('dayjs/locale/fr');\n\ndayjs.locale('fr');\nexport default {\n  name: 'ShareAlone',\n  components: {\n    PostAComment,\n    ShareAloneComments\n  },\n\n  data() {\n    return {\n      loggedUserId: \"\",\n      ShareId: \"\",\n      // Le Share\n      ShareText: \"\",\n      createdAt: \"\",\n      updatedAt: \"\",\n      userUserId: \"\",\n      UserName: \"\",\n      // le createur du Share\n      UserFirstname: \"\",\n      UserDepartement: \"\",\n      UserRole: \"\",\n      UserEmail: \"\",\n      UserHabilitation: {\n        type: Boolean,\n        default: false\n      },\n      MediaUrl: \"\",\n      // le Media du Share\n      MediaDescription: \"\",\n      apiCommentsResponse: Array,\n      apiLength: Number,\n      CommentId: \"\",\n      CommentText: \"\",\n      CommentcreatedAt: \"\",\n      CommentupdatedAt: \"\",\n      CommentuserUserId: \"\",\n      modifyForm: {\n        type: Boolean,\n        default: true\n      },\n      isAdmin: {\n        type: Boolean,\n        default: false\n      }\n    };\n  },\n\n  methods: {\n    formatDate(dateString) {\n      // import de la donnée\n      const date = dayjs(dateString); // formatage\n\n      return date.format('dddd D MMMM YYYY , HH:mm');\n    },\n\n    GoToCorrectShare() {\n      this.modifyForm = false;\n    },\n\n    doNoCorrect() {\n      this.modifyForm = true;\n    },\n\n    correctShare() {\n      const ShareToBeCorrected = document.getElementById(\"ShareToBeCorrected\");\n      const ShareId = new URL(window.location.href).hash.split(\"=\")[1];\n      const Token = JSON.parse(sessionStorage.getItem(\"Token\"));\n      const Modify = new FormData(ShareToBeCorrected);\n      Modify.append('ShareId', ShareId); //--- TEST ---- ///\n      // for(var pair of Modify.entries()) {\n      //   console.log(pair[0]+ ', '+ pair[1]);\n      // }\n\n      fetch(`http://localhost:3000/api/shares/${ShareId}`, {\n        method: 'PUT',\n        headers: {\n          \"Accept\": \"*/*\",\n          // \"Content-Type\": \"multipart/form-data\", \n          \"Authorization\": \"Bearer \" + Token\n        },\n        body: Modify,\n        mode: \"cors\"\n      }).then(response => {\n        if (response.status == 201) {\n          this.success = true;\n          this.message = \"Mise à jour effectuée.\";\n          this.modifyForm = true;\n          this.$router.push({\n            name: 'wall'\n          });\n          this.$router.go(0); // history.go(0);\n        } else {\n          response.json().then(json => {\n            this.success = false;\n            this.message = json.error || json.message;\n            return this.message;\n          });\n        }\n      }).catch(() => {\n        this.success = false;\n        this.message = `Le serveur ne répond pas ! Veuillez réessayer ultérieurement`;\n      });\n    },\n\n    deleteShare() {\n      const Token = JSON.parse(sessionStorage.getItem(\"Token\")); // const loggedUserId=JSON.parse(sessionStorage.getItem(\"UserId\"))\n\n      const ShareId = new URL(window.location.href).hash.split(\"=\")[1];\n      const Share = {\n        \"ShareId\": ShareId\n      };\n      const deleteShare = confirm(\"Le share et tous les commentaires associés vont être effacés\");\n\n      if (deleteShare) {\n        fetch(`http://localhost:3000/api/shares/${ShareId}`, {\n          method: 'DELETE',\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": \"Bearer \" + Token\n          },\n          body: JSON.stringify(Share),\n          mode: \"cors\"\n        }).then(() => {\n          alert(\"Share effacé !\");\n          setTimeout(this.$router.push({\n            name: 'wall'\n          }), 3000);\n        }).catch(error => {\n          alert(error);\n        });\n      } else {\n        this.$router.push({\n          name: 'wall'\n        });\n      }\n    }\n\n  },\n\n  beforeMount() {\n    const Token = JSON.parse(sessionStorage.getItem(\"Token\"));\n    const loggedUserId = JSON.parse(sessionStorage.getItem(\"UserId\"));\n    const ShareId = new URL(window.location.href).hash.split(\"=\")[1];\n    this.isAdmin = sessionStorage.getItem(\"isAdmin\");\n    console.log(this.isAdmin); // LE SHARE       \n\n    fetch(`http://localhost:3000/api/shares/${ShareId}`, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + Token\n      },\n      mode: \"cors\"\n    }).then(res => {\n      return res.json();\n    }).then(res => {\n      this.loggedUserId = loggedUserId;\n      this.ShareId = res.ShareId; //stocker cela qqpart\n\n      this.ShareText = res.ShareText;\n      this.createdAt = res.createdAt;\n      this.updatedAt = res.updatedAt;\n      this.userUserId = res.userUserId; //stocker cela qqpart\n\n      this.UserName = res.user.UserName;\n      this.UserFirstname = res.user.UserFirstname;\n      this.UserDepartement = res.user.UserDepartement;\n      this.UserRole = res.user.UserRole;\n      this.UserEmail = res.user.UserEmail;\n      this.MediaUrl = res.medium.MediaUrl;\n      this.MediaDescription = res.medium.MediaDescription;\n    }).catch(error => {\n      alert(error);\n    }); // LES COMMENTAIRES    \n\n    fetch(`http://localhost:3000/api/comments/${ShareId}`, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + Token\n      },\n      mode: \"cors\"\n    }).then(res => {\n      return res.json();\n    }).then(res => {\n      this.apiCommentsResponse = res;\n      this.apiLength = res.length;\n    }).catch(error => {\n      alert(error);\n    });\n  }\n\n};","map":{"version":3,"mappings":"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","names":["PostAComment","ShareAloneComments","dayjs","require","locale","name","components","data","loggedUserId","ShareId","ShareText","createdAt","updatedAt","userUserId","UserName","UserFirstname","UserDepartement","UserRole","UserEmail","UserHabilitation","type","Boolean","default","MediaUrl","MediaDescription","apiCommentsResponse","Array","apiLength","Number","CommentId","CommentText","CommentcreatedAt","CommentupdatedAt","CommentuserUserId","modifyForm","isAdmin","methods","formatDate","dateString","date","format","GoToCorrectShare","doNoCorrect","correctShare","ShareToBeCorrected","document","getElementById","URL","window","location","href","hash","split","Token","JSON","parse","sessionStorage","getItem","Modify","FormData","append","fetch","method","headers","body","mode","then","response","status","success","message","$router","push","go","json","error","catch","deleteShare","Share","confirm","stringify","alert","setTimeout","beforeMount","console","log","res","user","medium","length"],"sourceRoot":"","sources":["/Users/stefan/Library/Mobile Documents/com~apple~CloudDocs/08 WEB ET SITES/P7/frontend/src/components/ShareAlone.vue"],"sourcesContent":["<template>\n           <section class=\"mainshares shares\">\n\n                    <!-- LE SHARE -->\n                    <div class=\"card\" id=\"shareAlone\" >\n\n                                <div class=\"card__image\" >\n                                    <div class=\"card__image--img\" v-if=\"MediaUrl.split(`/07media/`)[1] == `feather.png`\">\n                                      <img  :src='MediaUrl' style=\"width : 50px\" />           \n                                    </div>\n\n                                    <div class=\"card__image--img\" v-else >\n                                      <img :src='MediaUrl'/>            \n                                    </div>\n                                </div>\n                    \n                                <div class=\"card__info\">\n\n                                    <!-- le texte du share -->\n                                    <div id=\"oldShareText\" v-show=\"modifyForm\">\n                                      <p class=\"card__info--text card__info--sharetext\">{{ ShareText }}</p>\n                                    </div>\n\n                                    <!-- la fenêtre qui s'ouvre pour modifier le texte du share -->\n                                    <div id=\"newShareText\" v-show=\"!modifyForm\">\n                                       <form     \n                                          type=\"multipart/form-data\"\n                                          method=\"PUT\" \n                                          name=\"form\" \n                                          id=\"ShareToBeCorrected\"\n                                          \n                                          @submit = \"correctShare\"\n                                          class=\"formulaire\">\n\n                                                <!--Le Media -->\n                                                <!-- <div class=\"formLine\">\n                                                          <label    \n                                                                    for=\"Media\" \n                                                                    class=\"label\">Votre image, votre GIF</label>\n                                                          <input    class=\"input\"\n                                                                    form=\"ShareToBeCorrected\" \n                                                                    @input=\"checkForm\"\n                                                                    @change=\"uploadImage($event)\"\n                                                                    type=\"file\"\n                                                                    accept=\"image/png, image/jpg, image/jpeg, image/png, image/gif\"\n                                                                    multiple\n                                                                    id=\"Media\" \n                                                                    name=\"file\" \n                                                                  >\n                                                </div> -->\n\n                                                <!-- <div id=\"formImagePreview\">\n                                                          <img v-if=\"file\" :src=\"file\" />\n                                                </div> -->\n                                                \n                                                <!--Le Share-->\n                                                <div class=\"formLine\">\n                                                          <label    \n                                                                    for=\"ShareText\" \n                                                                    class=\"label\">Votre nouveau texte</label>\n                                                          <textarea class=\"bigtextarea textarea input\"\n                                                                    form=\"ShareToBeCorrected\" \n                                                                    type=\"textarea\"\n                                                                    \n                                                                    autofocus\n                                                                    id=\"ShareText\"\n                                                                    name=\"ShareText\"\n                                                                    v-model=\"ShareText\"\n                                                                    ></textarea>\n                                                </div>\n\n                                                <div class=\"btn-div\">\n                                                          <button type=\"button\" class=\"btn\" @click=\"doNotModify()\" id=\"CancelBtn\">Annuler</button>\n                                                          <button type=\"button\" class=\"btn\" @click=\"correctShare()\" id=\"ShareBtn\">Mettre à jour</button>\n                                                </div>\n                        \n                                      </form>\n                                    </div>\n\n                                    <!-- les infos sur le share (auteur, date, commentaires) -->\n\n                                    <div class=\"card__info--complement\">\n\n                                        <div class=\"card__info--complement--firstline\">\n                                          \n                                          <p> {{ UserFirstname}} {{ UserName}} / {{ UserDepartement}} / {{ UserRole}} </p>\n                                          <p v-if=\"isAdmin == 1\"><router-link :to=\"`/modifyByAdmin/${ userUserId }`\">Accéder aux données utilisateur</router-link></p>\n                                          <p hidden>{{ userUserId }}</p>\n                                          <p>{{ formatDate(updatedAt) }}</p>\n                                          <p>{{ apiLength }} commentaires</p>\n                                          \n                                        </div>\n                                    </div>\n\n                                    <!-- le bouton pour modifier le texte du share  ou l'effacer quand on en est l'auteur-->\n                                    <div id=\"modifyOrDelete\" class=\"btn-div\">\n                                          <button v-show=\"userUserId===loggedUserId || isAdmin == 1\" type=\"button\" class=\"btn\" @click=\"GoToCorrectShare()\" id=\"modifyShareBtn\">Corriger</button>\n                                          <button v-show=\"userUserId===loggedUserId || isAdmin == 1\" type=\"button\" class=\"btn\" @click=\"deleteShare()\" id=\"deleteShareBtn\">Effacer</button>\n                                    </div>    \n                                </div>\n\n                    </div>\n\n                    <!-- LE BOUTON (et la section) POUR COMMENTER -->\n                    <!-- n'apparait que si l'auteur du share n'est pas le user loggé -->\n                    <PostAComment v-if=\"loggedUserId!=userUserId\"/>\n\n                    <!-- LES COMMENTAIRES -->\n\n                    <ShareAloneComments/>\n                     \n               \n          </section>\n          \n</template>\n\n<script>\nimport PostAComment from \"@/components/PostAComment.vue\"\nimport ShareAloneComments from \"@/components/ShareAloneComments.vue\"\nimport dayjs from 'dayjs'\nrequire('dayjs/locale/fr')\ndayjs.locale('fr')\n\nexport default {\n          name : 'ShareAlone',\n          components: {\n                              PostAComment,\n                              ShareAloneComments,\n          },\n\n          \n\n          data(){\n                    return{\n\n                            loggedUserId: \"\",\n                            ShareId: \"\", // Le Share\n                            ShareText:\"\",\n                            createdAt: \"\",\n                            updatedAt:\"\",\n                            userUserId:\"\",\n\n                            UserName:\"\", // le createur du Share\n                            UserFirstname:\"\", \n                            UserDepartement:\"\", \n                            UserRole:\"\",\n                            UserEmail:\"\",\n                            UserHabilitation:{\n                              type : Boolean,\n                              default : false\n                            },\n\n                            MediaUrl: \"\", // le Media du Share\n                            MediaDescription : \"\", \n                            apiCommentsResponse : Array,\n                            apiLength : Number,\n\n                            CommentId : \"\",\n                            CommentText : \"\",\n                            CommentcreatedAt : \"\",\n                            CommentupdatedAt : \"\",\n                            CommentuserUserId : \"\", \n\n                            modifyForm :{\n                              type: Boolean,\n                              default: true },\n                            \n                            isAdmin :{\n                              type: Boolean,\n                              default: false },\n\n                    }\n          },\n\n          methods : {\n\n            \n\n            formatDate(dateString) {\n                            // import de la donnée\n                            const date = dayjs(dateString);\n                            // formatage\n                            return date.format('dddd D MMMM YYYY , HH:mm');\n                      },\n\n            GoToCorrectShare() {\n                  this.modifyForm = false;\n            },\n            doNoCorrect(){\n                  this.modifyForm = true;\n            },\n\n            correctShare(){\n                    const ShareToBeCorrected = document.getElementById(\"ShareToBeCorrected\");\n                    const ShareId = new URL(window.location.href).hash.split(\"=\")[1];\n                    const Token = JSON.parse(sessionStorage.getItem(\"Token\"));\n                    const Modify = new FormData(ShareToBeCorrected);\n\n                    Modify.append('ShareId',ShareId)\n\n\n                    //--- TEST ---- ///\n                    // for(var pair of Modify.entries()) {\n                    //   console.log(pair[0]+ ', '+ pair[1]);\n                    // }\n\n                    fetch(`http://localhost:3000/api/shares/${ShareId}`, {\n                              method: 'PUT',\n                              headers: {\n                                  \"Accept\":\"*/*\",\n                                  // \"Content-Type\": \"multipart/form-data\", \n                                  \"Authorization\": \"Bearer \" + Token\n                              },\n                              body: Modify,\n                              mode : \"cors\"})\n\n                    .then((response) => {\n\n                              if (response.status == 201) { \n                                        this.success= true;\n                                        this.message = \"Mise à jour effectuée.\";\n                                        this.modifyForm = true;\n                                        this.$router.push({ name: 'wall' });\n                                        this.$router.go(0);\n                                        // history.go(0);\n                              } else {\n                                        response.json ()\n                                        .then ((json) => {\n                                        this.success= false;\n                                        this.message = json.error ||  json.message ;\n                                        return this.message\n                                        })\n                              }\n                    })\n                    .catch (() => {\n                              this.success= false;\n                              this.message = `Le serveur ne répond pas ! Veuillez réessayer ultérieurement`;\n                    })         \n\n            },\n            deleteShare() {\n\n                          const  Token = JSON.parse(sessionStorage.getItem(\"Token\"));\n                          // const loggedUserId=JSON.parse(sessionStorage.getItem(\"UserId\"))\n                          const ShareId = new URL(window.location.href).hash.split(\"=\")[1];\n                          const Share = {\n                            \"ShareId\" : ShareId\n                          }\n\n                          const deleteShare = confirm(\"Le share et tous les commentaires associés vont être effacés\")\n\n                          if (deleteShare){\n                            fetch(`http://localhost:3000/api/shares/${ShareId}`, {\n                              method: 'DELETE',\n                              headers: {\"Content-Type\": \"application/json\", \n                                        \"Authorization\": \"Bearer \" + Token\n                              },\n                              body: JSON.stringify(Share),\n                              mode : \"cors\"\n                            })\n                            .then(() => {\n                              alert(\"Share effacé !\");\n                              setTimeout(this.$router.push({ name: 'wall' }), 3000);\n                            })\n                            .catch( (error) => { alert(error);\n                            })\n                          }else{\n                             this.$router.push({ name: 'wall' });\n                          }\n            },\n          },\n\n          beforeMount () {\n                            const  Token = JSON.parse(sessionStorage.getItem(\"Token\"));\n                            const loggedUserId=JSON.parse(sessionStorage.getItem(\"UserId\"))\n                            const ShareId = new URL(window.location.href).hash.split(\"=\")[1];\n\n                             \n                              this.isAdmin = sessionStorage.getItem(\"isAdmin\");\nconsole.log(this.isAdmin)\n\n                            // LE SHARE       \n                            fetch(`http://localhost:3000/api/shares/${ShareId}`, {\n                            method: 'GET',\n                            headers: {\"Content-Type\": \"application/json\", \n                                      \"Authorization\": \"Bearer \" + Token\n                            },\n                            mode : \"cors\"\n                            })\n                            .then((res) => {\n                              return res.json();\n                            })\n                            .then((res) =>{\n                              this.loggedUserId = loggedUserId;\n                              this.ShareId = res.ShareId; //stocker cela qqpart\n                              this.ShareText = res.ShareText;\n                              this.createdAt = res.createdAt;\n                              this.updatedAt = res.updatedAt;\n                              this.userUserId = res.userUserId; //stocker cela qqpart\n\n                              this.UserName = res.user.UserName;\n                              this.UserFirstname = res.user.UserFirstname;\n                              this.UserDepartement = res.user.UserDepartement;\n                              this.UserRole = res.user.UserRole;\n                              this.UserEmail = res.user.UserEmail;\n\n                              this.MediaUrl = res.medium.MediaUrl;\n                              this.MediaDescription= res.medium.MediaDescription;\n                            })\n                            .catch( (error) => { alert(error);\n                            });\n                           \n                           // LES COMMENTAIRES    \n\n                            fetch(`http://localhost:3000/api/comments/${ShareId}`, {\n                            method: 'GET',\n                            headers: {\"Content-Type\": \"application/json\", \n                                      \"Authorization\": \"Bearer \" + Token\n                            },\n                            mode : \"cors\"\n                            })\n                            .then((res) => {\n                              return res.json();\n                            })\n                            .then((res) =>{\n                              this.apiCommentsResponse=res\n                              this.apiLength = res.length\n                            })\n                            .catch( (error) => { alert(error);\n                            });\n          },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n\n\n</style>"]},"metadata":{},"sourceType":"module"}