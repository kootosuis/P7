{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vShow as _vShow, withDirectives as _withDirectives, vModelText as _vModelText, resolveComponent as _resolveComponent, createBlock as _createBlock, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"mainshares shares\"\n};\nconst _hoisted_2 = {\n  class: \"card\",\n  id: \"shareAlone\"\n};\nconst _hoisted_3 = {\n  class: \"card__image\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"card__image--img\"\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  key: 1,\n  class: \"card__image--img\"\n};\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = {\n  class: \"card__info\"\n};\nconst _hoisted_9 = {\n  id: \"oldShareText\"\n};\nconst _hoisted_10 = {\n  class: \"card__info--text card__info--sharetext\"\n};\nconst _hoisted_11 = {\n  id: \"newShareText\"\n};\nconst _hoisted_12 = {\n  class: \"formLine\"\n};\n\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"ShareText\",\n  class: \"label\"\n}, \"Votre nouveau texte\", -1\n/* HOISTED */\n);\n\nconst _hoisted_14 = {\n  class: \"btn-div\"\n};\nconst _hoisted_15 = {\n  class: \"card__info--complement\"\n};\nconst _hoisted_16 = {\n  class: \"card__info--complement--firstline\"\n};\nconst _hoisted_17 = {\n  key: 0\n};\nconst _hoisted_18 = {\n  hidden: \"\"\n};\nconst _hoisted_19 = {\n  id: \"modifyOrDelete\",\n  class: \"btn-div\"\n};\nexport function render(_ctx, _cache) {\n  const _component_PostAComment = _resolveComponent(\"PostAComment\");\n\n  const _component_ShareAloneComments = _resolveComponent(\"ShareAloneComments\");\n\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createCommentVNode(\" LE SHARE \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_ctx.MediaUrl.split(`/07media/`)[1] == `feather.png` ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"img\", {\n    src: _ctx.MediaUrl,\n    style: {\n      \"width\": \"50px\"\n    }\n  }, null, 8\n  /* PROPS */\n  , _hoisted_5)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"img\", {\n    src: _ctx.MediaUrl\n  }, null, 8\n  /* PROPS */\n  , _hoisted_7)]))]), _createElementVNode(\"div\", _hoisted_8, [_createCommentVNode(\" le texte du share \"), _withDirectives(_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"p\", _hoisted_10, _toDisplayString(_ctx.ShareText), 1\n  /* TEXT */\n  )], 512\n  /* NEED_PATCH */\n  ), [[_vShow, _ctx.modifyForm]]), _createCommentVNode(\" la fenêtre qui s'ouvre pour modifier le texte du share \"), _withDirectives(_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"form\", {\n    type: \"multipart/form-data\",\n    method: \"PUT\",\n    name: \"form\",\n    id: \"ShareToBeCorrected\",\n    onSubmit: _cache[3] || (_cache[3] = (...args) => _ctx.correctShare && _ctx.correctShare(...args)),\n    class: \"formulaire\"\n  }, [_createCommentVNode(\"Le Media \"), _createCommentVNode(\" <div class=\\\"formLine\\\">\\n                                                          <label    \\n                                                                    for=\\\"Media\\\" \\n                                                                    class=\\\"label\\\">Votre image, votre GIF</label>\\n                                                          <input    class=\\\"input\\\"\\n                                                                    form=\\\"ShareToBeCorrected\\\" \\n                                                                    @input=\\\"checkForm\\\"\\n                                                                    @change=\\\"uploadImage($event)\\\"\\n                                                                    type=\\\"file\\\"\\n                                                                    accept=\\\"image/png, image/jpg, image/jpeg, image/png, image/gif\\\"\\n                                                                    multiple\\n                                                                    id=\\\"Media\\\" \\n                                                                    name=\\\"file\\\" \\n                                                                  >\\n                                                </div> \"), _createCommentVNode(\" <div id=\\\"formImagePreview\\\">\\n                                                          <img v-if=\\\"file\\\" :src=\\\"file\\\" />\\n                                                </div> \"), _createCommentVNode(\"Le Share\"), _createElementVNode(\"div\", _hoisted_12, [_hoisted_13, _withDirectives(_createElementVNode(\"textarea\", {\n    class: \"bigtextarea textarea input\",\n    form: \"ShareToBeCorrected\",\n    type: \"textarea\",\n    autofocus: \"\",\n    id: \"ShareText\",\n    name: \"ShareText\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.ShareText = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.ShareText]])]), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn\",\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.doNotModify()),\n    id: \"CancelBtn\"\n  }, \"Annuler\"), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn\",\n    onClick: _cache[2] || (_cache[2] = $event => _ctx.correctShare()),\n    id: \"ShareBtn\"\n  }, \"Mettre à jour\")])], 32\n  /* HYDRATE_EVENTS */\n  )], 512\n  /* NEED_PATCH */\n  ), [[_vShow, !_ctx.modifyForm]]), _createCommentVNode(\" les infos sur le share (auteur, date, commentaires) \"), _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.UserFirstname) + \" \" + _toDisplayString(_ctx.UserName) + \" / \" + _toDisplayString(_ctx.UserDepartement) + \" / \" + _toDisplayString(_ctx.UserRole), 1\n  /* TEXT */\n  ), _ctx.isAdmin ? (_openBlock(), _createElementBlock(\"a\", _hoisted_17, _toDisplayString(_ctx.UserFirstname) + \" \" + _toDisplayString(_ctx.UserName) + \" / \" + _toDisplayString(_ctx.UserDepartement) + \" / \" + _toDisplayString(_ctx.UserRole), 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", _hoisted_18, _toDisplayString(_ctx.userUserId), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", null, _toDisplayString(_ctx.formatDate(_ctx.updatedAt)), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", null, _toDisplayString(_ctx.apiLength) + \" commentaires\", 1\n  /* TEXT */\n  )])]), _createCommentVNode(\" le bouton pour modifier le texte du share  ou l'effacer quand on en est l'auteur\"), _createElementVNode(\"div\", _hoisted_19, [_withDirectives(_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn\",\n    onClick: _cache[4] || (_cache[4] = $event => _ctx.GoToCorrectShare()),\n    id: \"modifyShareBtn\"\n  }, \"Corriger\", 512\n  /* NEED_PATCH */\n  ), [[_vShow, _ctx.userUserId === _ctx.loggedUserId || _ctx.UserHabilitation]]), _withDirectives(_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn\",\n    onClick: _cache[5] || (_cache[5] = $event => _ctx.deleteShare()),\n    id: \"deleteShareBtn\"\n  }, \"Effacer\", 512\n  /* NEED_PATCH */\n  ), [[_vShow, _ctx.userUserId === _ctx.loggedUserId || _ctx.UserHabilitation]])])])]), _createCommentVNode(\" LE BOUTON (et la section) POUR COMMENTER \"), _createCommentVNode(\" n'apparait que si l'auteur du share n'est pas le user loggé \"), _ctx.loggedUserId != _ctx.userUserId ? (_openBlock(), _createBlock(_component_PostAComment, {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" LES COMMENTAIRES \"), _createVNode(_component_ShareAloneComments)]);\n}","map":{"version":3,"mappings":"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","names":["class","id","_createElementVNode","for","hidden","_createElementBlock","_createCommentVNode","_ctx","split","src","style","_hoisted_7","_toDisplayString","type","method","name","onSubmit","_hoisted_13","form","autofocus","$event","onClick","_hoisted_17","_createBlock","_component_PostAComment","key","_createVNode","_component_ShareAloneComments"],"sourceRoot":"","sources":["/Users/stefan/Library/Mobile Documents/com~apple~CloudDocs/08 WEB ET SITES/P7/frontend/src/components/ShareAlone.vue"],"sourcesContent":["<template>\n           <section class=\"mainshares shares\">\n\n                    <!-- LE SHARE -->\n                    <div class=\"card\" id=\"shareAlone\" >\n\n                                <div class=\"card__image\" >\n                                    <div class=\"card__image--img\" v-if=\"MediaUrl.split(`/07media/`)[1] == `feather.png`\">\n                                      <img  :src='MediaUrl' style=\"width : 50px\" />           \n                                    </div>\n\n                                    <div class=\"card__image--img\" v-else >\n                                      <img :src='MediaUrl'/>            \n                                    </div>\n                                </div>\n                    \n                                <div class=\"card__info\">\n\n                                    <!-- le texte du share -->\n                                    <div id=\"oldShareText\" v-show=\"modifyForm\">\n                                      <p class=\"card__info--text card__info--sharetext\">{{ ShareText }}</p>\n                                    </div>\n\n                                    <!-- la fenêtre qui s'ouvre pour modifier le texte du share -->\n                                    <div id=\"newShareText\" v-show=\"!modifyForm\">\n                                       <form     \n                                          type=\"multipart/form-data\"\n                                          method=\"PUT\" \n                                          name=\"form\" \n                                          id=\"ShareToBeCorrected\"\n                                          \n                                          @submit = \"correctShare\"\n                                          class=\"formulaire\">\n\n                                                <!--Le Media -->\n                                                <!-- <div class=\"formLine\">\n                                                          <label    \n                                                                    for=\"Media\" \n                                                                    class=\"label\">Votre image, votre GIF</label>\n                                                          <input    class=\"input\"\n                                                                    form=\"ShareToBeCorrected\" \n                                                                    @input=\"checkForm\"\n                                                                    @change=\"uploadImage($event)\"\n                                                                    type=\"file\"\n                                                                    accept=\"image/png, image/jpg, image/jpeg, image/png, image/gif\"\n                                                                    multiple\n                                                                    id=\"Media\" \n                                                                    name=\"file\" \n                                                                  >\n                                                </div> -->\n\n                                                <!-- <div id=\"formImagePreview\">\n                                                          <img v-if=\"file\" :src=\"file\" />\n                                                </div> -->\n                                                \n                                                <!--Le Share-->\n                                                <div class=\"formLine\">\n                                                          <label    \n                                                                    for=\"ShareText\" \n                                                                    class=\"label\">Votre nouveau texte</label>\n                                                          <textarea class=\"bigtextarea textarea input\"\n                                                                    form=\"ShareToBeCorrected\" \n                                                                    type=\"textarea\"\n                                                                    \n                                                                    autofocus\n                                                                    id=\"ShareText\"\n                                                                    name=\"ShareText\"\n                                                                    v-model=\"ShareText\"\n                                                                    ></textarea>\n                                                </div>\n\n                                                <div class=\"btn-div\">\n                                                          <button type=\"button\" class=\"btn\" @click=\"doNotModify()\" id=\"CancelBtn\">Annuler</button>\n                                                          <button type=\"button\" class=\"btn\" @click=\"correctShare()\" id=\"ShareBtn\">Mettre à jour</button>\n                                                </div>\n                        \n                                      </form>\n                                    </div>\n\n                                    <!-- les infos sur le share (auteur, date, commentaires) -->\n\n                                    <div class=\"card__info--complement\">\n\n                                        <div class=\"card__info--complement--firstline\">\n                                          \n                                          <p> {{ UserFirstname}} {{ UserName}} / {{ UserDepartement}} / {{ UserRole}} </p>\n                                          <a v-if=\"isAdmin\"> {{ UserFirstname}} {{ UserName}} / {{ UserDepartement}} / {{ UserRole}} </a>\n                                          <p hidden>{{ userUserId }}</p>\n                                          <p>{{ formatDate(updatedAt) }}</p>\n                                          <p>{{ apiLength }} commentaires</p>\n                                          \n                                        </div>\n                                    </div>\n\n                                    <!-- le bouton pour modifier le texte du share  ou l'effacer quand on en est l'auteur-->\n                                    <div id=\"modifyOrDelete\" class=\"btn-div\">\n                                          <button v-show=\"userUserId===loggedUserId || UserHabilitation\" type=\"button\" class=\"btn\" @click=\"GoToCorrectShare()\" id=\"modifyShareBtn\">Corriger</button>\n                                          <button v-show=\"userUserId===loggedUserId || UserHabilitation\" type=\"button\" class=\"btn\" @click=\"deleteShare()\" id=\"deleteShareBtn\">Effacer</button>\n                                    </div>    \n                                </div>\n\n                    </div>\n\n                    <!-- LE BOUTON (et la section) POUR COMMENTER -->\n                    <!-- n'apparait que si l'auteur du share n'est pas le user loggé -->\n                    <PostAComment v-if=\"loggedUserId!=userUserId\"/>\n\n                    <!-- LES COMMENTAIRES -->\n\n                    <ShareAloneComments/>\n                     \n               \n          </section>\n          \n</template>\n\n<script>\nimport PostAComment from \"@/components/PostAComment.vue\"\nimport ShareAloneComments from \"@/components/ShareAloneComments.vue\"\nimport dayjs from 'dayjs'\nrequire('dayjs/locale/fr')\ndayjs.locale('fr')\n\nexport default {\n          name : 'ShareAlone',\n          components: {\n                              PostAComment,\n                              ShareAloneComments,\n          },\n\n          \n\n          data(){\n                    return{\n\n                            loggedUserId: \"\",\n                            ShareId: \"\", // Le Share\n                            ShareText:\"\",\n                            createdAt: \"\",\n                            updatedAt:\"\",\n                            userUserId:\"\",\n\n                            UserName:\"\", // le createur du Share\n                            UserFirstname:\"\", \n                            UserDepartement:\"\", \n                            UserRole:\"\",\n                            UserEmail:\"\",\n                            UserHabilitation:{\n                              type : Boolean,\n                              default : false\n                            },\n\n                            MediaUrl: \"\", // le Media du Share\n                            MediaDescription : \"\", \n                            apiCommentsResponse : Array,\n                            apiLength : Number,\n\n                            CommentId : \"\",\n                            CommentText : \"\",\n                            CommentcreatedAt : \"\",\n                            CommentupdatedAt : \"\",\n                            CommentuserUserId : \"\", \n\n                            modifyForm :{\n                              type: Boolean,\n                              default: true },\n                            \n                            IsAdmin : \"\"\n\n                    }\n          },\n\n          methods : {\n\n            checkAdmin(){\n              sessionStorage.getItem(\"UserHabiltauiion\")\n              this.isAdmin\n            }\n\n            formatDate(dateString) {\n                            // import de la donnée\n                            const date = dayjs(dateString);\n                            // formatage\n                            return date.format('dddd D MMMM YYYY , HH:mm');\n                      },\n\n            GoToCorrectShare() {\n                  this.modifyForm = false;\n            },\n            doNoCorrect(){\n                  this.modifyForm = true;\n            },\n\n            correctShare(){\n                    const ShareToBeCorrected = document.getElementById(\"ShareToBeCorrected\");\n                    const ShareId = new URL(window.location.href).hash.split(\"=\")[1];\n                    const Token = JSON.parse(sessionStorage.getItem(\"Token\"));\n                    const Modify = new FormData(ShareToBeCorrected);\n\n                    Modify.append('ShareId',ShareId)\n\n\n                    //--- TEST ---- ///\n                    // for(var pair of Modify.entries()) {\n                    //   console.log(pair[0]+ ', '+ pair[1]);\n                    // }\n\n                    fetch(`http://localhost:3000/api/shares/${ShareId}`, {\n                              method: 'PUT',\n                              headers: {\n                                  \"Accept\":\"*/*\",\n                                  // \"Content-Type\": \"multipart/form-data\", \n                                  \"Authorization\": \"Bearer \" + Token\n                              },\n                              body: Modify,\n                              mode : \"cors\"})\n\n                    .then((response) => {\n\n                              if (response.status == 201) { \n                                        this.success= true;\n                                        this.message = \"Mise à jour effectuée.\";\n                                        this.modifyForm = true;\n                                        this.$router.push({ name: 'wall' });\n                                        this.$router.go(0);\n                                        // history.go(0);\n                              } else {\n                                        response.json ()\n                                        .then ((json) => {\n                                        this.success= false;\n                                        console.log(json);\n                                        this.message = json.error ||  json.message ;\n                                        return this.message\n                                        })\n                              }\n                    })\n                    .catch (() => {\n                              this.success= false;\n                              this.message = `Le serveur ne répond pas ! Veuillez réessayer ultérieurement`;\n                    })         \n\n            },\n            deleteShare() {\n\n                          const  Token = JSON.parse(sessionStorage.getItem(\"Token\"));\n                          // const loggedUserId=JSON.parse(sessionStorage.getItem(\"UserId\"))\n                          const ShareId = new URL(window.location.href).hash.split(\"=\")[1];\n                          const Share = {\n                            \"ShareId\" : ShareId\n                          }\n\n                          const deleteShare = confirm(\"Le share et tous les commentaires associés vont être effacés\")\n\n                          if (deleteShare){\n                            fetch(`http://localhost:3000/api/shares/${ShareId}`, {\n                              method: 'DELETE',\n                              headers: {\"Content-Type\": \"application/json\", \n                                        \"Authorization\": \"Bearer \" + Token\n                              },\n                              body: JSON.stringify(Share),\n                              mode : \"cors\"\n                            })\n                            .then(() => {\n                              alert(\"Share effacé !\");\n                              setTimeout(this.$router.push({ name: 'wall' }), 3000);\n                            })\n                            .catch( (error) => { alert(error);\n                            })\n                          }else{\n                             this.$router.push({ name: 'wall' });\n                          }\n            },\n          },\n\n          beforeMount () {\n                            const  Token = JSON.parse(sessionStorage.getItem(\"Token\"));\n                            const loggedUserId=JSON.parse(sessionStorage.getItem(\"UserId\"))\n                            const ShareId = new URL(window.location.href).hash.split(\"=\")[1];\n\n                            // LE SHARE       \n                            fetch(`http://localhost:3000/api/shares/${ShareId}`, {\n                            method: 'GET',\n                            headers: {\"Content-Type\": \"application/json\", \n                                      \"Authorization\": \"Bearer \" + Token\n                            },\n                            mode : \"cors\"\n                            })\n                            .then((res) => {\n                              return res.json();\n                            })\n                            .then((res) =>{\n                              this.loggedUserId = loggedUserId;\n                              this.ShareId = res.ShareId; //stocker cela qqpart\n                              this.ShareText = res.ShareText;\n                              this.createdAt = res.createdAt;\n                              this.updatedAt = res.updatedAt;\n                              this.userUserId = res.userUserId; //stocker cela qqpart\n\n                              this.UserName = res.user.UserName;\n                              this.UserFirstname = res.user.UserFirstname;\n                              this.UserDepartement = res.user.UserDepartement;\n                              this.UserRole = res.user.UserRole;\n                              this.UserEmail = res.user.UserEmail;\n\n                              this.MediaUrl = res.medium.MediaUrl;\n                              this.MediaDescription= res.medium.MediaDescription;\n                            })\n                            .catch( (error) => { alert(error);\n                            });\n                           \n                           // LES COMMENTAIRES    \n\n                            fetch(`http://localhost:3000/api/comments/${ShareId}`, {\n                            method: 'GET',\n                            headers: {\"Content-Type\": \"application/json\", \n                                      \"Authorization\": \"Bearer \" + Token\n                            },\n                            mode : \"cors\"\n                            })\n                            .then((res) => {\n                              return res.json();\n                            })\n                            .then((res) =>{\n                              this.apiCommentsResponse=res\n                              this.apiLength = res.length\n                            })\n                            .catch( (error) => { alert(error);\n                            });\n          },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n\n\n</style>"]},"metadata":{},"sourceType":"module"}