{"ast":null,"code":"export default {\n  name: 'PostAComment',\n\n  data() {\n    return {\n      success: \"\",\n      message: \"\",\n      //message d'erreur\n      CommentText: String,\n      ShareFormHidden: {\n        type: Boolean,\n        default: true\n      }\n    };\n  },\n\n  methods: {\n    displayForm() {\n      this.ShareFormHidden = false;\n    },\n\n    displayGoTo() {\n      this.ShareFormHidden = true;\n    },\n\n    checkForm() {\n      if (document.getElementById(\"CommentOnACommentText\").textContent != null) {\n        document.getElementById(\"CommentOnACommentBtn\").disabled = false;\n      } else {\n        document.getElementById(\"CommentOnACommentBtn\").disabled = true;\n      }\n    },\n\n    CommentOnAComment() {\n      const Token = JSON.parse(sessionStorage.getItem(\"Token\"));\n      const commentOnACommentText = document.getElementById(\"CommentOnACommentText\").value;\n      const shareShareId = new URL(window.location.href).hash.split(\"=\")[1];\n      const commentCommentId = document.getElementById(\"CommentOnACommentId\").textContent;\n      const commentOnAComment = {\n        \"CommentText\": commentOnACommentText,\n        \"shareShareId\": shareShareId,\n        \"commentCommentId\": commentCommentId\n      };\n      console.log(commentOnAComment);\n      fetch(\"http://localhost:3000/api/comments\", {\n        method: 'POST',\n        body: JSON.stringify(commentOnAComment),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"*/*\",\n          \"Authorization\": \"Bearer \" + Token\n        },\n        mode: \"cors\"\n      }).then(response => {\n        if (response.status == 201) {\n          this.success = true;\n          this.message = \"Commentaire en ligne.\";\n          this.ShareFormHidden = true;\n          this.$router.push({\n            name: 'wall'\n          });\n          this.$router.go(0);\n        } else {\n          response.json().then(json => {\n            this.success = false;\n            console.log(json);\n            this.message = json.error || json.message;\n            return this.message;\n          });\n        }\n      }).catch(() => {\n        this.success = false;\n        this.message = `Le serveur ne répond pas ! Veuillez réessayer ultérieurement`;\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA+CA,eAAe;AACbA,MAAI,EAAE,cADO;;AAEbC,MAAI,GAAG;AACL,WAAO;AACDC,aAAO,EAAE,EADR;AAEDC,aAAM,EAAG,EAFR;AAEY;AACbC,iBAAW,EAAEC,MAHZ;AAIDC,qBAAc,EAAG;AACfC,YAAI,EAAEC,OADS;AAEfC,eAAO,EAAE;AAFM;AAJhB,KAAP;AAQC,GAXU;;AAabC,SAAO,EAAE;AACDC,eAAW,GAAE;AACX,WAAKL,eAAL,GAAuB,KAAvB;AACD,KAHA;;AAIDM,eAAW,GAAE;AACX,WAAKN,eAAL,GAAuB,IAAvB;AACD,KANA;;AAODO,aAAS,GAAG;AACF,UAAIC,QAAQ,CAACC,cAAT,CAAwB,uBAAxB,EAAiDC,WAAjD,IAAgE,IAApE,EAA0E;AACxEF,gBAAQ,CAACC,cAAT,CAAwB,sBAAxB,EAAgDE,QAAhD,GAA2D,KAA3D;AACF,OAFA,MAEO;AAAEH,gBAAQ,CAACC,cAAT,CAAwB,sBAAxB,EAAgDE,QAAhD,GAA2D,IAA3D;AAAgE;AAClF,KAXA;;AAYDC,qBAAiB,GAAG;AAEV,YAAMC,KAAI,GAAIC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAX,CAAd;AACA,YAAMC,qBAAoB,GAAIV,QAAQ,CAACC,cAAT,CAAwB,uBAAxB,EAAiDU,KAA/E;AACA,YAAMC,YAAW,GAAI,IAAIC,GAAJ,CAAQC,MAAM,CAACC,QAAP,CAAgBC,IAAxB,EAA8BC,IAA9B,CAAmCC,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C,CAArB;AAEA,YAAMC,gBAAe,GAAInB,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,EAA+CC,WAAxE;AAEA,YAAMkB,iBAAgB,GAAI;AAAE,uBAAeV,qBAAjB;AACE,wBAAgBE,YADlB;AAEE,4BAAoBO;AAFtB,OAA1B;AAIAE,aAAO,CAACC,GAAR,CAAYF,iBAAZ;AAEAG,WAAK,CAAC,oCAAD,EAAuC;AAClCC,cAAM,EAAE,MAD0B;AAElCC,YAAI,EAAEnB,IAAI,CAACoB,SAAL,CAAeN,iBAAf,CAF4B;AAGlCO,eAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,oBAAS,KAFJ;AAGL,2BAAiB,YAAYtB;AAHxB,SAHyB;AAQlCuB,YAAG,EAAI;AAR2B,OAAvC,CAAL,CAUCC,IAVD,CAUOC,QAAD,IAAc;AACV,YAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AAClB,eAAK3C,OAAL,GAAc,IAAd;AACA,eAAKC,OAAL,GAAe,uBAAf;AACA,eAAKG,eAAL,GAAuB,IAAvB;AACA,eAAKwC,OAAL,CAAaC,IAAb,CAAkB;AAAE/C,gBAAI,EAAE;AAAR,WAAlB;AACA,eAAK8C,OAAL,CAAaE,EAAb,CAAgB,CAAhB;AAEV,SAPA,MAOO;AACGJ,kBAAQ,CAACK,IAAT,GACCN,IADD,CACQM,IAAD,IAAU;AACjB,iBAAK/C,OAAL,GAAc,KAAd;AACAiC,mBAAO,CAACC,GAAR,CAAYa,IAAZ;AACA,iBAAK9C,OAAL,GAAe8C,IAAI,CAACC,KAAL,IAAeD,IAAI,CAAC9C,OAAnC;AACA,mBAAO,KAAKA,OAAZ;AACC,WAND;AAOV;AACT,OA3BD,EA4BCgD,KA5BD,CA4BQ,MAAM;AACJ,aAAKjD,OAAL,GAAc,KAAd;AACA,aAAKC,OAAL,GAAgB,8DAAhB;AACT,OA/BD;AAgCV;;AA1DC;AAbI,CAAf","names":["name","data","success","message","CommentText","String","ShareFormHidden","type","Boolean","default","methods","displayForm","displayGoTo","checkForm","document","getElementById","textContent","disabled","CommentOnAComment","Token","JSON","parse","sessionStorage","getItem","commentOnACommentText","value","shareShareId","URL","window","location","href","hash","split","commentCommentId","commentOnAComment","console","log","fetch","method","body","stringify","headers","mode","then","response","status","$router","push","go","json","error","catch"],"sourceRoot":"","sources":["/Users/stefan/Library/Mobile Documents/com~apple~CloudDocs/08 WEB ET SITES/P7/frontend/src/components/PostACommentOnAComment.vue"],"sourcesContent":["<template>\n    <section class = \"container\">\n      <div class=\"btn-div\" id=\"ShareAccess\" v-show=\"ShareFormHidden\">\n        <button type=\"button\" \n                class=\"btn\" \n                @click=\"displayForm()\" \n                id=\"GoToShare\" \n                value=\"Partager\">\n                Une réaction ?\n        </button>\n      </div>\n      <div class = \"formSection\" id=\"ShareForm\" v-show=\"!ShareFormHidden\" >\n          <div class = \"formDiv\">\n                    <form     \n                              type=\"multipart/form-data\"\n                              method=\"POST\" \n                              name=\"form\" \n                              id=\"CommentOnAComment\"\n                              class=\"formulaire\">\n                              \n                              <!--Le Comment-->\n                               <div class=\"formLine\">\n                                        <label    \n                                                  for=\"CommentOnACommentText\" \n                                                  class=\"label\">Votre réaction</label>\n                                        <textarea class=\"bigtextarea textarea input\"\n                                                  form=\"CommentOnACommentText\" \n                                                  type=\"textarea\"\n                                                  @input=\"checkForm\"\n                                                 \n                                                  placeholder= \"...\"\n                                                  autofocus\n                                                  id=\"CommentOnACommentText\"\n                                                  name=\"CommentOnACommentText\"></textarea>\n                              </div>\n                                                         \n                              <div class=\"btn-div\">\n                                        <button type=\"button\" class=\"btn\" @click=\"displayGoTo()\" id=\"CancelBtn\">Annuler</button>\n                                        <button type=\"button\" class=\"btn\" @click=\"CommentOnAComment()\" id=\"CommentOnACommentBtn\" disabled>Réagir</button>\n                              </div>\n                    </form>\n          </div>\n      </div>\n    </section>\n</template>\n\n<script>\nexport default {\n  name: 'PostAComment',\n  data() {\n    return {\n          success: \"\",\n          message :\"\", //message d'erreur\n          CommentText: String,\n          ShareFormHidden :{\n            type: Boolean,\n            default: true }\n            }\n    },\n  \n  methods: {\n          displayForm(){\n            this.ShareFormHidden = false\n          },\n          displayGoTo(){\n            this.ShareFormHidden = true\n          },\n          checkForm() {\n                    if (document.getElementById(\"CommentOnACommentText\").textContent != null) {\n                      document.getElementById(\"CommentOnACommentBtn\").disabled = false;\n                    } else { document.getElementById(\"CommentOnACommentBtn\").disabled = true }\n          },\n          CommentOnAComment() {\n\n                    const Token = JSON.parse(sessionStorage.getItem(\"Token\"));\n                    const commentOnACommentText = document.getElementById(\"CommentOnACommentText\").value;\n                    const shareShareId = new URL(window.location.href).hash.split(\"=\")[1];\n\n                    const commentCommentId = document.getElementById(\"CommentOnACommentId\").textContent;\n\n                    const commentOnAComment = { \"CommentText\": commentOnACommentText,\n                                                \"shareShareId\": shareShareId,\n                                                \"commentCommentId\": commentCommentId,\n                    }\n                    console.log(commentOnAComment);\n\n                    fetch(\"http://localhost:3000/api/comments\", {\n                              method: 'POST',\n                              body: JSON.stringify(commentOnAComment),\n                              headers: {\n                                  \"Content-Type\": \"application/json\",\n                                  \"Accept\":\"*/*\",\n                                  \"Authorization\": \"Bearer \" + Token,\n                              },\n                              mode : \"cors\"})\n\n                    .then((response) => {\n                              if (response.status == 201) { \n                                        this.success= true;\n                                        this.message = \"Commentaire en ligne.\";\n                                        this.ShareFormHidden = true;\n                                        this.$router.push({ name: 'wall' });\n                                        this.$router.go(0);\n                                        \n                              } else {\n                                        response.json ()\n                                        .then ((json) => {\n                                        this.success= false;\n                                        console.log(json);\n                                        this.message = json.error ||  json.message ;\n                                        return this.message\n                                        })\n                              }\n                    })\n                    .catch (() => {\n                              this.success= false;\n                              this.message = `Le serveur ne répond pas ! Veuillez réessayer ultérieurement`;\n                    })         \n          }               \n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n#formImagePreview {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n#formImagePreview img {\n  max-width: 100%;\n  max-height: 500px;\n}\n\n</style>"]},"metadata":{},"sourceType":"module"}